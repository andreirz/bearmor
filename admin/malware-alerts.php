<?php
/**
 * Malware Alerts Admin Page
 *
 * @package Bearmor_Security
 */

// Exit if accessed directly
if ( ! defined( 'ABSPATH' ) ) {
	exit;
}

// Enqueue dashboard CSS and dashicons
wp_enqueue_style( 'dashicons' );
wp_enqueue_style( 'bearmor-dashboard', plugins_url( 'assets/css/dashboard.css', dirname( __FILE__ ) ), array(), '1.0.0' );

// Handle scan action
if ( isset( $_POST['bearmor_malware_scan'] ) && check_admin_referer( 'bearmor_malware_scan' ) ) {
	$results = Bearmor_Malware_Scanner::run_scan();
	echo '<div class="notice notice-success"><p>';
	echo '<strong>Malware scan completed!</strong><br>';
	echo 'Scanned: ' . esc_html( $results['scanned'] ) . ' files, ';
	echo 'Threats found: ' . esc_html( $results['threats'] ) . ', ';
	echo 'Time: ' . esc_html( $results['time'] ) . 's';
	echo '</p></div>';
}

// Handle restore file
if ( isset( $_POST['bearmor_restore_file'] ) && isset( $_POST['quarantine_id'] ) && check_admin_referer( 'bearmor_restore_file' ) ) {
	$quarantine_id = intval( $_POST['quarantine_id'] );
	$result = Bearmor_File_Actions::restore_file( $quarantine_id );
	
	if ( is_wp_error( $result ) ) {
		echo '<div class="notice notice-error"><p>' . esc_html( $result->get_error_message() ) . '</p></div>';
	} else {
		echo '<div class="notice notice-success"><p><strong>File restored successfully!</strong></p></div>';
	}
}

// Handle delete quarantined file
if ( isset( $_POST['bearmor_delete_quarantine'] ) && isset( $_POST['quarantine_id'] ) && check_admin_referer( 'bearmor_delete_quarantine' ) ) {
	$quarantine_id = intval( $_POST['quarantine_id'] );
	
	global $wpdb;
	$qfile = $wpdb->get_row( $wpdb->prepare(
		"SELECT * FROM {$wpdb->prefix}bearmor_quarantine WHERE id = %d",
		$quarantine_id
	) );
	
	if ( $qfile && file_exists( $qfile->quarantined_path ) ) {
		unlink( $qfile->quarantined_path );
	}
	
	$wpdb->update(
		$wpdb->prefix . 'bearmor_quarantine',
		array( 'status' => 'deleted' ),
		array( 'id' => $quarantine_id ),
		array( '%s' ),
		array( '%d' )
	);
	
	echo '<div class="notice notice-success"><p><strong>File permanently deleted!</strong></p></div>';
}

// Handle threat actions
if ( isset( $_POST['bearmor_threat_action'] ) && isset( $_POST['threat_id'] ) && check_admin_referer( 'bearmor_threat_action' ) ) {
	$threat_id = intval( $_POST['threat_id'] );
	$action = sanitize_text_field( $_POST['bearmor_threat_action'] );

	global $wpdb;
	$threat = $wpdb->get_row( $wpdb->prepare(
		"SELECT * FROM {$wpdb->prefix}bearmor_malware_detections WHERE id = %d",
		$threat_id
	) );

	if ( $threat ) {
		switch ( $action ) {
			case 'whitelist':
				Bearmor_Malware_Scanner::whitelist_file( $threat->file_path );
				Bearmor_Malware_Scanner::update_threat_status( $threat_id, 'whitelisted' );
				echo '<div class="notice notice-success"><p>File whitelisted and will be ignored in future scans.</p></div>';
				break;

			case 'quarantine':
				$result = Bearmor_File_Actions::quarantine_file( $threat->file_path, 'Malware detected: ' . $threat->pattern_name );
				if ( is_wp_error( $result ) ) {
					echo '<div class="notice notice-error"><p>' . esc_html( $result->get_error_message() ) . '</p></div>';
				} else {
					Bearmor_Malware_Scanner::update_threat_status( $threat_id, 'quarantined' );
					echo '<div class="notice notice-success"><p><strong>File quarantined successfully!</strong></p></div>';
				}
				break;

		}
	}
}

// Get threats
$threats = Bearmor_Malware_Scanner::get_threats( 'pending' );

// Debug: Check if we got threats
if ( isset( $_GET['debug'] ) ) {
	global $wpdb;
	$table_name = $wpdb->prefix . 'bearmor_malware_detections';
	$count = $wpdb->get_var( "SELECT COUNT(*) FROM $table_name" );
	echo '<div class="notice notice-info"><p>Debug: Total threats in DB: ' . $count . ' | Retrieved: ' . count( $threats ) . '</p></div>';
}

// Remove duplicate detections (keep only most specific pattern per line)
$unique_threats = array();
foreach ( $threats as $threat ) {
	$key = $threat->file_path . ':' . $threat->line_number;
	if ( ! isset( $unique_threats[ $key ] ) || strlen( $threat->pattern_id ) > strlen( $unique_threats[ $key ]->pattern_id ) ) {
		$unique_threats[ $key ] = $threat;
	}
}
$threats = array_values( $unique_threats );

// Group threats by file
$grouped_threats = array();
foreach ( $threats as $threat ) {
	if ( ! isset( $grouped_threats[ $threat->file_path ] ) ) {
		$grouped_threats[ $threat->file_path ] = array();
	}
	$grouped_threats[ $threat->file_path ][] = $threat;
}

// Sort each file's threats by severity
$severity_order = array( 'critical' => 1, 'high' => 2, 'medium' => 3, 'low' => 4 );
foreach ( $grouped_threats as $file_path => $file_threats ) {
	usort( $file_threats, function( $a, $b ) use ( $severity_order ) {
		return $severity_order[ $a->severity ] - $severity_order[ $b->severity ];
	} );
	$grouped_threats[ $file_path ] = $file_threats;
}

// Sort files by highest severity threat
uasort( $grouped_threats, function( $a, $b ) use ( $severity_order ) {
	return $severity_order[ $a[0]->severity ] - $severity_order[ $b[0]->severity ];
} );

$last_scan = get_option( 'bearmor_last_malware_scan' );
$scan_results = get_option( 'bearmor_malware_scan_results', array() );

// Group threats by severity AFTER deduplication
$critical_threats = array_filter( $threats, function( $t ) { return $t->severity === 'critical'; } );
$high_threats = array_filter( $threats, function( $t ) { return $t->severity === 'high'; } );
$medium_threats = array_filter( $threats, function( $t ) { return $t->severity === 'medium'; } );
$low_threats = array_filter( $threats, function( $t ) { return $t->severity === 'low'; } );
?>

<div class="wrap">
	<div class="bearmor-header">
		<h1>üõ°Ô∏è Malware Alerts</h1>
		<p class="bearmor-subtitle">Scans files for suspicious code patterns and known malware signatures</p>
	</div>

	<!-- Scan Controls + Threat Summary (50/50 split) -->
	<div style="display: grid; grid-template-columns: 1fr 1fr; gap: 20px; margin: 20px 0;">
		<!-- Scan Controls -->
		<div class="bearmor-widget">
			<div class="bearmor-widget-header">
				<h2>üîç Malware Scanner</h2>
			</div>
			<div class="bearmor-widget-content">
				<?php if ( $last_scan ) : ?>
					<div class="bearmor-stat-row">
						<span class="bearmor-stat-label">Last scan:</span>
						<span class="bearmor-stat-value"><?php echo esc_html( human_time_diff( strtotime( $last_scan ), current_time( 'timestamp' ) ) . ' ago' ); ?></span>
					</div>
					<?php if ( ! empty( $scan_results ) ) : ?>
						<div class="bearmor-stat-row">
							<span class="bearmor-stat-label">Files scanned:</span>
							<span class="bearmor-stat-value"><?php echo esc_html( $scan_results['scanned'] ); ?></span>
						</div>
						<div class="bearmor-stat-row">
							<span class="bearmor-stat-label">Threats found:</span>
							<span class="bearmor-stat-value"><?php echo esc_html( $scan_results['threats'] ); ?></span>
						</div>
						<div class="bearmor-stat-row">
							<span class="bearmor-stat-label">Scan time:</span>
							<span class="bearmor-stat-value"><?php echo esc_html( $scan_results['time'] ); ?>s</span>
						</div>
					<?php endif; ?>
				<?php else : ?>
					<p style="color: #666;">No scan has been run yet.</p>
				<?php endif; ?>

				<form method="post" style="margin-top: 20px;">
					<?php wp_nonce_field( 'bearmor_malware_scan' ); ?>
					<button type="submit" name="bearmor_malware_scan" value="1" class="bearmor-btn-primary">
						üîç Run Malware Scan
					</button>
					<p class="bearmor-help-text">Scans all PHP, JS, and HTML files for malicious code patterns.</p>
				</form>
			</div>
		</div>

		<!-- Threat Summary -->
		<div class="bearmor-widget">
			<div class="bearmor-widget-header">
				<h2>üö® Threat Summary</h2>
			</div>
			<div class="bearmor-widget-content">
				<?php if ( ! empty( $threats ) ) : ?>
					<div class="bearmor-threat-stats">
						<div class="bearmor-threat-stat bearmor-critical">
							<div class="bearmor-threat-count"><?php echo count( $critical_threats ); ?></div>
							<div class="bearmor-threat-label">Critical</div>
						</div>
						<div class="bearmor-threat-stat bearmor-high">
							<div class="bearmor-threat-count"><?php echo count( $high_threats ); ?></div>
							<div class="bearmor-threat-label">High</div>
						</div>
						<div class="bearmor-threat-stat bearmor-medium">
							<div class="bearmor-threat-count"><?php echo count( $medium_threats ); ?></div>
							<div class="bearmor-threat-label">Medium</div>
						</div>
						<div class="bearmor-threat-stat bearmor-low">
							<div class="bearmor-threat-count"><?php echo count( $low_threats ); ?></div>
							<div class="bearmor-threat-label">Low</div>
						</div>
					</div>
				<?php else : ?>
					<p style="color: #666; text-align: center; padding: 40px 0;">‚úÖ No threats detected</p>
				<?php endif; ?>
			</div>
		</div>
	</div>

	<!-- Threats List -->
	<h2>Detected Threats (<?php echo count( $threats ); ?> threats in <?php echo count( $grouped_threats ); ?> files)</h2>

	<?php if ( empty( $threats ) ) : ?>
		<p>No threats detected. Run a malware scan first.</p>
	<?php else : ?>
		<table class="wp-list-table widefat fixed striped">
			<thead>
				<tr>
					<th style="width: 50%;">File Path / Threat</th>
					<th style="width: 15%;">Severity</th>
					<th style="width: 35%;">Actions</th>
				</tr>
			</thead>
			<tbody>
				<?php 
				$group_index = 0;
				foreach ( $grouped_threats as $file_path => $file_threats ) : 
					$threat_count = count( $file_threats );
					$first_threat = $file_threats[0];
					$highest_severity = $first_threat->severity;
					$highest_severity_color = Bearmor_Malware_Patterns::get_severity_color( $highest_severity );
					$group_bg = ( $group_index % 2 === 0 ) ? '#ffffff' : '#f9f9f9';
					$group_index++;
				?>
					<!-- File header row -->
					<tr style="background: <?php echo esc_attr( $group_bg ); ?>; border-top: 3px solid #e0e0e0; border-left: 4px solid <?php echo esc_attr( $highest_severity_color ); ?>;">
						<td style="padding: 15px 12px;">
							<strong style="font-size: 14px;">üìÑ <?php echo esc_html( $file_path ); ?></strong>
							<span style="color: #666; font-size: 12px; margin-left: 10px;">
								(<?php echo $threat_count; ?> threat<?php echo $threat_count > 1 ? 's' : ''; ?>)
							</span>
						</td>
						<td>
							<span style="background: <?php echo esc_attr( $highest_severity_color ); ?>; color: #fff; padding: 4px 8px; border-radius: 3px; font-size: 11px; font-weight: bold; display: inline-block;">
								<?php echo esc_html( strtoupper( $highest_severity ) ); ?>
							</span>
						</td>
						<td>
							<form method="post" style="display: inline;">
								<?php wp_nonce_field( 'bearmor_threat_action' ); ?>
								<input type="hidden" name="threat_id" value="<?php echo esc_attr( $first_threat->id ); ?>">
								<button type="submit" name="bearmor_threat_action" value="quarantine" class="button button-small bearmor-btn-quarantine" onclick="return confirm('Quarantine this file? All threats in this file will be removed.');"
									style="background: #d63638; color: #fff; border-color: #d63638;">
									Quarantine File
								</button>
							</form>
							<form method="post" style="display: inline; margin-left: 5px;">
								<?php wp_nonce_field( 'bearmor_threat_action' ); ?>
								<input type="hidden" name="threat_id" value="<?php echo esc_attr( $first_threat->id ); ?>">
								<button type="submit" name="bearmor_threat_action" value="whitelist" class="button button-small bearmor-btn-safe">
									Whitelist File
								</button>
							</form>
						</td>
					</tr>
					
					<!-- Threats for this file -->
					<?php foreach ( $file_threats as $threat ) : 
						$severity_color = Bearmor_Malware_Patterns::get_severity_color( $threat->severity );
					?>
						<tr style="background: <?php echo esc_attr( $group_bg ); ?>;">
							<td style="padding: 10px 12px 10px 40px; border-left: 4px solid <?php echo esc_attr( $highest_severity_color ); ?>;">
								<strong><?php echo esc_html( $threat->pattern_name ); ?></strong>
								<span style="display: inline-block; border: 1px solid <?php echo esc_attr( $severity_color ); ?>; color: <?php echo esc_attr( $severity_color ); ?>; padding: 2px 5px; border-radius: 3px; font-size: 10px; font-weight: bold; margin-left: 8px; vertical-align: middle;">
									<?php echo esc_html( strtoupper( $threat->severity ) ); ?>
								</span>
								<span class="dashicons dashicons-info bearmor-info-icon" data-tooltip="<?php echo esc_attr( $threat->description ); ?>"></span>
								<br>
								<small style="color: #666;">
									Line <?php echo esc_html( $threat->line_number ); ?> ‚Ä¢ 
									<a href="#" class="bearmor-preview-link" data-file="<?php echo esc_attr( $threat->file_path ); ?>" data-line="<?php echo esc_attr( $threat->line_number ); ?>" data-preview-id="preview-<?php echo esc_attr( md5( $threat->file_path . $threat->line_number ) ); ?>" onclick="bearmor_toggle_preview(this); return false;">View Code</a>
								</small>
							</td>
							<td></td>
							<td style="color: #999; font-size: 12px;">
								<!-- Actions on file level only -->
							</td>
						</tr>
						<tr class="bearmor-preview-row" id="preview-<?php echo esc_attr( md5( $threat->file_path . $threat->line_number ) ); ?>" style="display: none;">
							<td colspan="3" style="background: #f0f0f0; padding: 15px; border-left: 4px solid <?php echo esc_attr( $highest_severity_color ); ?>;">
								<div class="bearmor-preview-content">
									<div class="bearmor-preview-loading">Loading preview...</div>
								</div>
							</td>
						</tr>
					<?php endforeach; ?>
				<?php endforeach; ?>
			</tbody>
		</table>
	<?php endif; ?>

	<!-- Quarantined Files -->
	<?php
	global $wpdb;
	$quarantined_files = $wpdb->get_results(
		"SELECT * FROM {$wpdb->prefix}bearmor_quarantine WHERE status = 'quarantined' ORDER BY quarantined_at DESC"
	);
	?>
	
	<?php if ( ! empty( $quarantined_files ) ) : ?>
		<h2 style="margin-top: 40px;">Quarantined Files (<?php echo count( $quarantined_files ); ?>)</h2>
		<table class="wp-list-table widefat fixed striped">
			<thead>
				<tr>
					<th style="width: 50%;">Original File Path</th>
					<th style="width: 20%;">Quarantined</th>
					<th style="width: 20%;">Reason</th>
					<th style="width: 10%;">Actions</th>
				</tr>
			</thead>
			<tbody>
				<?php foreach ( $quarantined_files as $qfile ) : ?>
					<tr style="background: #f9f9f9;">
						<td>
							<strong><?php echo esc_html( $qfile->file_path ); ?></strong>
							<br>
							<small style="color: #999;">Stored as: <?php echo esc_html( basename( $qfile->quarantined_path ) ); ?></small>
						</td>
						<td style="color: #666;"><?php echo esc_html( human_time_diff( strtotime( $qfile->quarantined_at ), current_time( 'timestamp' ) ) . ' ago' ); ?></td>
						<td style="color: #666;"><?php echo esc_html( $qfile->reason ); ?></td>
						<td>
							<form method="post" style="display: inline;">
								<?php wp_nonce_field( 'bearmor_restore_file' ); ?>
								<input type="hidden" name="quarantine_id" value="<?php echo esc_attr( $qfile->id ); ?>">
								<button type="submit" name="bearmor_restore_file" value="1" class="bearmor-widget-action" onclick="return confirm('Restore this file to its original location?');" style="padding: 0; border: none; background: none; cursor: pointer;">
									Restore
								</button>
							</form>
						</td>
					</tr>
				<?php endforeach; ?>
			</tbody>
		</table>
	<?php endif; ?>

	<!-- Help Section -->
	<div style="background: #f0f6fc; border: 1px solid #c3dafe; padding: 20px; border-radius: 5px; margin: 30px 0;">
		<h3 style="margin-top: 0;">‚ÑπÔ∏è Understanding Malware Alerts</h3>
		<ul style="margin: 0;">
			<li><strong>üî¥ High:</strong> Highly suspicious code that should be investigated immediately (e.g., eval($_POST), system() with user input)</li>
			<li><strong>üü† Medium:</strong> Potentially dangerous patterns that may be legitimate (e.g., eval(), base64_decode() in established plugins)</li>
		</ul>
		<p style="margin-top: 10px; margin-bottom: 0;"><strong>Note:</strong> Minified files (.min.js), vendor directories, and LOW/MEDIUM severity patterns are automatically excluded to reduce false positives.</p>
		<p style="margin-bottom: 0; margin-top: 15px;"><strong>Actions:</strong></p>
		<ul style="margin-top: 5px;">
			<li><strong>Quarantine:</strong> Moves file to safe location and deactivates if it's a plugin/theme</li>
			<li><strong>Whitelist:</strong> Marks file as safe and excludes from future scans (permanent)</li>
		</ul>
	</div>
</div>

<style>
/* Threat Stats Grid */
.bearmor-threat-stats {
	display: grid;
	grid-template-columns: repeat(2, 1fr);
	gap: 15px;
}

.bearmor-threat-stat {
	text-align: center;
	padding: 20px;
	border-radius: 8px;
	border: 2px solid;
}

.bearmor-threat-stat.bearmor-critical {
	background: #fff5f5;
	border-color: #d63638;
}

.bearmor-threat-stat.bearmor-high {
	background: #fff8f0;
	border-color: #f56e28;
}

.bearmor-threat-stat.bearmor-medium {
	background: #fffbf0;
	border-color: #dba617;
}

.bearmor-threat-stat.bearmor-low {
	background: #f0f9f4;
	border-color: #00a32a;
}

.bearmor-threat-count {
	font-size: 36px;
	font-weight: bold;
	margin-bottom: 5px;
}

.bearmor-threat-stat.bearmor-critical .bearmor-threat-count {
	color: #d63638;
}

.bearmor-threat-stat.bearmor-high .bearmor-threat-count {
	color: #f56e28;
}

.bearmor-threat-stat.bearmor-medium .bearmor-threat-count {
	color: #dba617;
}

.bearmor-threat-stat.bearmor-low .bearmor-threat-count {
	color: #00a32a;
}

.bearmor-threat-label {
	font-size: 13px;
	font-weight: 600;
	color: #666;
	text-transform: uppercase;
	letter-spacing: 0.5px;
}

/* Info Icon with Custom Tooltip */
.bearmor-info-icon {
	cursor: help;
	margin-left: 8px;
	font-size: 18px;
	color: #0073aa;
	opacity: 0.7;
	vertical-align: middle;
	position: relative;
}

.bearmor-info-icon:hover {
	opacity: 1;
}

.bearmor-info-icon::after {
	content: attr(data-tooltip);
	position: absolute;
	bottom: 100%;
	left: 50%;
	transform: translateX(-50%) translateY(-8px);
	background: #1e1e1e;
	color: #fff;
	padding: 8px 12px;
	border-radius: 4px;
	font-size: 12px;
	white-space: nowrap;
	max-width: 300px;
	white-space: normal;
	width: max-content;
	opacity: 0;
	visibility: hidden;
	pointer-events: none;
	transition: opacity 0.2s, visibility 0.2s;
	z-index: 99999;
	font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;
	line-height: 1.4;
	box-shadow: 0 2px 8px rgba(0,0,0,0.3);
}

.bearmor-info-icon:hover::after {
	opacity: 1;
	visibility: visible;
}

.bearmor-preview-link {
	color: #0073aa !important;
	text-decoration: none !important;
	font-weight: 500;
}

.bearmor-preview-link:hover {
	color: #005177 !important;
	text-decoration: underline !important;
}

.bearmor-preview-content {
	max-height: 600px;
	overflow-y: auto;
	background: #fff;
	border: 1px solid #ddd;
	border-radius: 3px;
}

.bearmor-preview-content pre {
	margin: 0;
	padding: 15px;
	font-family: 'Courier New', monospace;
	font-size: 12px;
	line-height: 1.5;
	white-space: pre-wrap;
	word-wrap: break-word;
}

.bearmor-preview-content .line-numbers {
	display: inline-block;
	width: 40px;
	color: #999;
	text-align: right;
	padding-right: 10px;
	border-right: 1px solid #ddd;
	margin-right: 10px;
	user-select: none;
}

.bearmor-preview-content .highlight-line {
	background: #fff3cd;
	display: block;
	margin: 0 -15px;
	padding: 0 15px;
}

.bearmor-preview-loading {
	padding: 20px;
	text-align: center;
	color: #666;
}

.bearmor-preview-error {
	padding: 20px;
	color: #d63638;
	background: #fcf0f1;
	border-radius: 3px;
}
</style>

<script>
function bearmor_toggle_preview(element) {
	var filePath = element.getAttribute('data-file');
	var lineNumber = element.getAttribute('data-line');
	var previewId = element.getAttribute('data-preview-id');
	var previewRow = document.getElementById(previewId);
	
	if (!previewRow) {
		console.error('Preview row not found:', previewId);
		return;
	}
	
	if (previewRow.style.display === 'none' || previewRow.style.display === '') {
		// Show preview
		previewRow.style.display = 'table-row';
		element.textContent = 'Hide Preview';
		
		// Load content if not already loaded
		if (!element.hasAttribute('data-loaded')) {
			bearmor_load_malware_preview(filePath, lineNumber, previewId);
			element.setAttribute('data-loaded', 'true');
		}
	} else {
		// Hide preview
		previewRow.style.display = 'none';
		element.textContent = 'View Preview';
	}
}

function bearmor_load_malware_preview(filePath, lineNumber, previewId) {
	var previewRow = document.getElementById(previewId);
	var contentDiv = previewRow.querySelector('.bearmor-preview-content');
	
	// AJAX request to load file content
	var xhr = new XMLHttpRequest();
	xhr.open('POST', ajaxurl, true);
	xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
	
	xhr.onload = function() {
		if (xhr.status === 200) {
			var response = JSON.parse(xhr.responseText);
			if (response.success) {
				contentDiv.innerHTML = response.data.html;
			} else {
				contentDiv.innerHTML = '<div class=\"bearmor-preview-error\">Error: ' + response.data.message + '</div>';
			}
		} else {
			contentDiv.innerHTML = '<div class=\"bearmor-preview-error\">Failed to load preview</div>';
		}
	};
	
	xhr.send('action=bearmor_preview_malware_file&file_path=' + encodeURIComponent(filePath) + '&line_number=' + encodeURIComponent(lineNumber) + '&nonce=<?php echo wp_create_nonce( 'bearmor_preview' ); ?>');
}
</script>
